{"version":3,"sources":["ImageTile.js","App.js","index.js"],"names":["ImageTile","props","react_default","a","createElement","style","height","onClick","src","image","alt","name","characters","gameStyle","display","justifyContent","flexWrap","width","margin","headerStyle","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","reset","clicked","i","length","push","setState","score","lost","handleClick","index","state","order","range","toConsumableArray","Array","keys","splice","Math","floor","random","_this2","shuffle","className","id","textAlign","map","concat","toLowerCase","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"8KAEe,SAASA,EAAUC,GAChC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,KAAOC,QAASN,EAAMM,SAC1CL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,OAAQ,WAAaE,IAAKP,EAAMQ,MAAOC,IAAKT,EAAMU,QCFtE,IAAMC,EAAa,CACjB,OACA,SACA,QACA,OACA,OACA,QACA,YACA,MACA,OACA,QACA,QAGIC,EAAY,CAChBC,QAAS,OACTC,eAAgB,eAChBC,SAAU,OACVC,MAAO,MACPC,OAAQ,QAGJC,EAAc,CAClBL,QAAS,OACTC,eAAgB,iBAsFHK,cAjFb,SAAAA,EAAYnB,GAAO,IAAAoB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvB,KAyBR2B,MAAQ,WAGN,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIlB,EAAWmB,OAAQD,IACrCD,EAAQG,MAAK,GAGfX,EAAKY,SAAS,CAAEC,MAAO,EAAGL,UAASM,MAAM,KAjCxBd,EAoCnBe,YAAc,SAACC,GACb,GAAIhB,EAAKiB,MAAMT,QAAQQ,GACrBhB,EAAKY,SAAS,CAAEE,MAAM,QACjB,CACL,IAAIN,EAAUR,EAAKiB,MAAMT,QACzBA,EAAQQ,IAAS,EACjBhB,EAAKY,SAAS,CAAEC,MAAOb,EAAKiB,MAAMJ,MAAQ,EAAGL,cAvC/CR,EAAKiB,MAAQ,CACXT,QAAS,GACTK,MAAO,EACPC,MAAM,GAGR,IAAK,IAAIL,EAAI,EAAGA,EAAIlB,EAAWmB,OAAQD,IACrCT,EAAKiB,MAAMT,QAAQG,MAAK,GAVT,OAAAX,yEAmBjB,IAJA,IAAIkB,EAAQ,GAERC,EAAKlB,OAAAmB,EAAA,EAAAnB,CAAOoB,MAAM9B,EAAWmB,QAAQY,QAEhCb,EAAIlB,EAAWmB,OAAQD,EAAI,EAAGA,IACrCS,EAAMP,KAAKQ,EAAMI,OAAOC,KAAKC,MAAMD,KAAKE,SAAWjB,GAAI,GAAG,IAG5D,OAAOS,mCAuBA,IAAAS,EAAAxB,KACHe,EAAQf,KAAKyB,UAEjB,OAAIzB,KAAKc,MAAMH,KAEXjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,qCAA6BoB,KAAKc,MAAMJ,OACxChC,EAAAC,EAAAC,cAAA,UAAQG,QAASiB,KAAKI,OAAtB,cAMJ1B,EAAAC,EAAAC,cAAA,OAAK8C,UAAU,UACbhD,EAAAC,EAAAC,cAAA,OAAK+C,GAAG,SAAS9C,MAAOc,GACtBjB,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,oBAAYoB,KAAKc,MAAMJ,QAEzBhC,EAAAC,EAAAC,cAAA,OAAK+C,GAAG,aAAa9C,MAAO,CAAEa,OAAQ,OAAQkC,UAAW,WACvDlD,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAES,QAAS,WAArB,2DAEFZ,EAAAC,EAAAC,cAAA,OAAK+C,GAAG,OAAO9C,MAAOQ,GACnB0B,EAAMc,IAAI,SAAAhB,GAAK,OACdnC,EAAAC,EAAAC,cAACJ,EAAD,CACEW,KAAMC,EAAWyB,GAAO1B,KACxBF,MAAK,iBAAA6C,OAAmB1C,EAAWyB,GAAOkB,cAArC,QACLhD,QAAS,kBAAMyC,EAAKZ,YAAYC,iBA1E5BmB,aC3BlBC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0f7d4b41.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default function ImageTile(props) {\r\n  return (\r\n    <div style={{ height: 400 }} onClick={props.onClick} >\r\n      <img style={{ height: \"inherit\" }} src={props.image} alt={props.name} />\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\nimport ImageTile from './ImageTile';\n\nconst characters = [\n  \"Beat\",\n  \"Boogie\",\n  \"Combo\",\n  \"Corn\",\n  \"Cube\",\n  \"Garam\",\n  \"Immortals\",\n  \"Jam\",\n  \"Jazz\",\n  \"Mayor\",\n  \"Yoyo\"\n]\n\nconst gameStyle = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  flexWrap: \"wrap\",\n  width: \"75%\",\n  margin: \"auto\"\n}\n\nconst headerStyle = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clicked: [],\n      score: 0,\n      lost: false\n    }\n\n    for (let i = 0; i < characters.length; i++) {\n      this.state.clicked.push(false);\n    }\n  }\n\n  shuffle() {\n    let order = [];\n\n    let range = [...Array(characters.length).keys()]\n\n    for (let i = characters.length; i > 0; i--) {\n      order.push(range.splice(Math.floor(Math.random() * i), 1)[0]);\n    }\n\n    return order;\n  }\n\n  reset = () => {\n    let clicked = [];\n\n    for (let i = 0; i < characters.length; i++) {\n      clicked.push(false);\n    }\n\n    this.setState({ score: 0, clicked, lost: false });\n  }\n\n  handleClick = (index) => {\n    if (this.state.clicked[index]) {\n      this.setState({ lost: true })\n    } else {\n      let clicked = this.state.clicked;\n      clicked[index] = true;\n      this.setState({ score: this.state.score + 1, clicked });\n    }\n  }\n\n  render() {\n    let order = this.shuffle();\n\n    if (this.state.lost) {\n      return (\n        <div>\n          <h1>You Lost!!!</h1>\n          <h2>You achieved a score of {this.state.score}</h2>\n          <button onClick={this.reset}>Try again</button>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"clicky\">\n        <div id=\"header\" style={headerStyle}>\n          <h1>Jet Set Radio Clicky Game</h1>\n          <h2>Score: {this.state.score}</h2>\n        </div>\n        <div id=\"directions\" style={{ margin: \"auto\", textAlign: \"center\" }}>\n          <p style={{ display: \"inline\" }}>Try and click on a different JSRF character everytime!</p>\n        </div>\n        <div id=\"game\" style={gameStyle}>\n          {order.map(index => (\n            <ImageTile\n              name={characters[index].name}\n              image={`./images/jsrf-${characters[index].toLowerCase()}.png`}\n              onClick={() => this.handleClick(index)} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}